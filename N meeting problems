//{ Driver Code Starts
#include <bits/stdc++.h>
using namespace std;


// } Driver Code Ends
class Solution {
  public:
    // Function to find the maximum number of meetings that can
    // be performed in a meeting room.
    bool cmp(pair<int,int>a , pair<int ,int>b){
        return b.second > a.second; 
    }
    
    int maxMeetings(int n, int start[], int end[]) {
        vector<pair<int,int>> pairs;
        
        for(int i = 0 ; i < n ; i++){
            pairs.push_back({start[i] , end[i]});
            
        }  
        
        sort(pairs.begin() , pairs.end() ,cmp);
        
         int lastmeeting = pairs[0].second ,cnt = 1;
         
         for(int j = 1 ; j < n; j++){
             if(pairs[j].first > lastmeeting){
                 cnt++;
                 lastmeeting = pairs[j].second;
                 
             }
             
         }
        
        return cnt;
    }
};

//{ Driver Code Starts.
int main() {
    int t;
    cin >> t;
    while (t--) {
        int n;
        cin >> n;
        int start[n], end[n];
        for (int i = 0; i < n; i++)
            cin >> start[i];

        for (int i = 0; i < n; i++)
            cin >> end[i];

        Solution ob;
        int ans = ob.maxMeetings(n, start, end);
        cout << ans << endl;
    }
    return 0;
}
// } Driver Code Ends
